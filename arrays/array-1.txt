// Frequencies in a Limited Array
class Solution {
    // Function to count the frequency of all elements from 1 to N in the array.
    public List<Integer> frequencyCount(int[] arr) {
        // do modify in the given array
        int n = arr.length;
        int[] hash = new int[1000001];
        for (int i=0; i<n; i++){
            hash[arr[i]] += 1;
        }
        ArrayList<Integer> result = new ArrayList<>();
        for(int i =1; i<=n; i++){
            result.add(hash[i]);
        }
        return result;
    }
}

// Count Frequency in a range
Input: ‘n’ = 6 ‘x’ = 9 ‘arr’ = [1, 3, 1, 9, 2, 7]    
Output: [2, 1, 1, 0, 0, 0]

import java.util.ArrayList;
public class Solution {
    public static int[] countFrequency(int n, int x, int []nums){
        // Write your code here.
        int[] array = new int[x+1];
        for(int i =0; i<n; i++){
            array[nums[i]]+=1;
        }

        int[] result = new int[n];     
        for(int i =1; i<=n; i++){
            if(i<=x){
                result[i-1] = array[i];
            }
        }
        return result;
    }
}

// Reverse The Array
    // We have an array ARR = {1, 2, 3, 4, 5, 6} and M = 3 , considering 0 
    // based indexing so the subarray {5, 6} will be reversed and our 
    // output array will be {1, 2, 3, 4, 6, 5}.

import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
public class Solution {
    public static void reverseArray(ArrayList<Integer> arr, int m){
        // Write your code here.\
        int start = m+1;
        int end = arr.size()-1;

        while(start < end){
            int temp = arr.get(start);
            arr.set(start, arr.get(end));
            arr.set(end, temp);

            start++;
            end--;
        }
    }
}

// Largest Element in Array
class Solution {
    public static int largest(int[] arr) {
        // code here
        int large = arr[0];
        for(int i = 1; i<arr.length; i++){
            if(arr[i]>large){
                large = arr[i];
            }
        }
        return large;
    }
}


// Second Largest Element in Array
class Solution {
    public int getSecondLargest(int[] arr) {
        // Code Here
        int large = arr[0];
        int small = -1;
        for(int i=1; i<arr.length; i++){
            if(arr[i]>large){
                small = large;
                large = arr[i];
            }else if(arr[i]>small && arr[i]!=large){
                small = arr[i];
            }
        }return small;
    }
}

// Second Largest Element in Array or return -1
import java.util.* ;
import java.io.*; 
public class Solution {
	public static int findSecondLargest(int n, int[] arr) {
		// Write your code here.
		int large = arr[0];
		int second = Integer.MIN_VALUE;
		for(int i=0; i<n; i++){
			if(arr[i]>large){
				second = large;
				large = arr[i];
			}else if(arr[i] > second && arr[i] != large){
				second = arr[i];
			}
		}
		if(second == Integer.MIN_VALUE){
			return -1;
		}else {return second;}
	}
}
